{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red39\green95\blue170;\red137\green177\blue221;\red197\green197\blue197;
\red254\green185\blue120;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
00:11 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
Okay.\
\cf2 \expnd0\expndtw0\kerning0
00:11 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
1) So shift all your coordinates such that the light lies at the origin and you have a "right-handed" coordinate system.\
\cf2 \expnd0\expndtw0\kerning0
00:13 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
2) Take the Cartesian coordinates of the calibration point (x_c, y_c, z_c) and turn them into polar coordinates (r_c, \\theta_c, \\phi_c) using these formulas: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Spherical_coordinate_system#Cartesian_coordinates"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul https://en.wikipedia.org/wiki/Spherical_coordinate_system#Cartesian_coordinates}}\
\cf2 \expnd0\expndtw0\kerning0
00:13 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
ignore the r_c value -- you don't even need to compute it.\
\cf2 \expnd0\expndtw0\kerning0
00:14 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
90 degrees - \\theta_c and \\phi_c give you the tilt and pan of the calibration point.\
\cf2 \expnd0\expndtw0\kerning0
00:14 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
Also, use atan2 function (Wikipedia refers to it: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Atan2"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul https://en.wikipedia.org/wiki/Atan2}})\
\cf2 \expnd0\expndtw0\kerning0
00:15 hydrogen: \cf4 \expnd0\expndtw0\kerning0
ah right, polar coordinates, it all comes back to me\
\cf2 \expnd0\expndtw0\kerning0
00:15 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
3) Take the Cartesian coordinates of the target point (x, y, z) and turn them into polar coordinates (r, \\theta, \\phi) using the same formulas.\
\cf2 \expnd0\expndtw0\kerning0
00:15 hydrogen: \cf4 \expnd0\expndtw0\kerning0
and the picture on that wikipedia page even looks like what I want!\
\cf2 \expnd0\expndtw0\kerning0
00:16 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
4) find (\\phi_1 - \\phi_2) -- this is the angle you have to pan by. You may have to reduce it to a range of -180 to 180 or whatever you require.\
\cf2 \expnd0\expndtw0\kerning0
00:16 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
err... \\phi - \\phi_c I mean\
\cf2 \expnd0\expndtw0\kerning0
00:17 hydrogen: \cf4 \expnd0\expndtw0\kerning0
sure\
\cf2 \expnd0\expndtw0\kerning0
00:17 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
5) find \\theta_c - \\theta -- this is the angle you have to tilt by. Once again, you may need to reduce it to some range.\
\cf2 \expnd0\expndtw0\kerning0
00:17 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
There might be minus signs to throw in depending on what coordinate system the light drivers operate in etc.\
\cf2 \expnd0\expndtw0\kerning0
00:17 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
If you find that the trigonometric computation is too expensive, later, you may want to figure out how to do this using quaternions.\
\cf2 \expnd0\expndtw0\kerning0
00:18 \cf3 \expnd0\expndtw0\kerning0
kstar: \cf4 \expnd0\expndtw0\kerning0
Or alternately, calculate all the trigonometry every 100 ms or so, and linearize that in a Taylor series, and use the linear interpolation for the fine movement.\
\cf2 \expnd0\expndtw0\kerning0
00:19 hydrogen: \cf4 \expnd0\expndtw0\kerning0
I also wonder, in a theoretical solution where there were multiple lights pointing at multiple moving points all in reference to the same origin/calibration point, would it be feasible/better for me to leave the calibration point at 0 and not shift the origin to each light? Or does that make the calculations worse\
\cf2 \expnd0\expndtw0\kerning0
00:21 hydrogen: \cf4 \expnd0\expndtw0\kerning0
well and my positioning because that I have in mind (probably {\field{\*\fldinst{HYPERLINK "https://www.pozyx.io/"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul https://www.pozyx.io}}) only update every 5-10hz, so I don't think that the calculations will be happening that intense\
\cf2 \expnd0\expndtw0\kerning0
00:25 \cf3 \expnd0\expndtw0\kerning0
kstar: 
\fs32 \cf5 \expnd0\expndtw0\kerning0
hydrogen
\fs24 \cf4 \expnd0\expndtw0\kerning0
: It makes the calculations hard, AFAICT.\
\cf2 \expnd0\expndtw0\kerning0
00:25 hydrogen: \cf4 \expnd0\expndtw0\kerning0
update speed of 5-10hz**\
\cf2 \expnd0\expndtw0\kerning0
00:26 hydrogen: \cf4 \expnd0\expndtw0\kerning0
well I don't want hard calculations\
\cf2 \expnd0\expndtw0\kerning0
00:26 hydrogen: \cf4 \expnd0\expndtw0\kerning0
at least to start with :)}