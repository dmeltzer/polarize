00:11 kstar: Okay.
00:11 kstar: 1) So shift all your coordinates such that the light lies at the origin and you have a "right-handed" coordinate system.
00:13 kstar: 2) Take the Cartesian coordinates of the calibration point (x_c, y_c, z_c) and turn them into polar coordinates (r_c, \theta_c, \phi_c) using these formulas: https://en.wikipedia.org/wiki/Spherical_coordinate_system#Cartesian_coordinates
00:13 kstar: ignore the r_c value -- you don't even need to compute it.
00:14 kstar: 90 degrees - \theta_c and \phi_c give you the tilt and pan of the calibration point.
00:14 kstar: Also, use atan2 function (Wikipedia refers to it: https://en.wikipedia.org/wiki/Atan2)
00:15 hydrogen: ah right, polar coordinates, it all comes back to me
00:15 kstar: 3) Take the Cartesian coordinates of the target point (x, y, z) and turn them into polar coordinates (r, \theta, \phi) using the same formulas.
00:15 hydrogen: and the picture on that wikipedia page even looks like what I want!
00:16 kstar: 4) find (\phi_1 - \phi_2) -- this is the angle you have to pan by. You may have to reduce it to a range of -180 to 180 or whatever you require.
00:16 kstar: err... \phi - \phi_c I mean
00:17 hydrogen: sure
00:17 kstar: 5) find \theta_c - \theta -- this is the angle you have to tilt by. Once again, you may need to reduce it to some range.
00:17 kstar: There might be minus signs to throw in depending on what coordinate system the light drivers operate in etc.
00:17 kstar: If you find that the trigonometric computation is too expensive, later, you may want to figure out how to do this using quaternions.
00:18 kstar: Or alternately, calculate all the trigonometry every 100 ms or so, and linearize that in a Taylor series, and use the linear interpolation for the fine movement.
00:19 hydrogen: I also wonder, in a theoretical solution where there were multiple lights pointing at multiple moving points all in reference to the same origin/calibration point, would it be feasible/better for me to leave the calibration point at 0 and not shift the origin to each light? Or does that make the calculations worse
00:21 hydrogen: well and my positioning because that I have in mind (probably https://www.pozyx.io) only update every 5-10hz, so I don't think that the calculations will be happening that intense
00:25 kstar: hydrogen: It makes the calculations hard, AFAICT.
00:25 hydrogen: update speed of 5-10hz**
00:26 hydrogen: well I don't want hard calculations
00:26 hydrogen: at least to start with :)